{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\OneDrive\\\\Bureau\\\\poke\\\\react_pokedex\\\\src\\\\components\\\\pokemon\\\\Pokemon.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class Pokemon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \" \",\n      pokemonIndex: \" \",\n      imageUrl: \" \",\n      types: [],\n      description: \" \",\n      stats: {\n        hp: \" \",\n        attack: \" \",\n        defense: \" \",\n        speed: \" \",\n        specialAttack: \" \",\n        specialDefense: \" \"\n      },\n      height: \" \",\n      weight: \" \",\n      eggGroup: \" \",\n      genderRatioMale: \" \",\n      genderRationFemale: \" \",\n      evs: \" \",\n      hatchSteps: \" \"\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params; //setting up the urls for the pokemon information\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n    const pokemonRes = await axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = \" \";\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case \"hp\":\n          hp = stat[\"base_stat\"];\n          break;\n\n        case \"attack\":\n          attack = stat[\"base_stat\"];\n          break;\n\n        case \"defense\":\n          defense = stat[\"base_stat\"];\n          break;\n\n        case \"speed\":\n          speed = stat[\"base_stat\"];\n          break;\n\n        case \"special-attack\":\n          specialAttack = stat[\"base_stat\"];\n          break;\n\n        case \"special-defense\":\n          specialDefense = stat[\"base_stat\"];\n          break;\n      }\n    }); //Convert Decimetes to Feet ... the +0.0001 *100) / 100 is for rounding to 2 decimal places\n\n    const height = Math.round((pokemonRes.data.height * 0.328084 + 0.0001) * 100) / 100; //Convert To lbs\n\n    const weight = Math.round((pokemonRes.data.weight * 0.220462 + 0.0001) * 100) / 100;\n    const types = pokemonRes.data.types.map(type => type.type.name);\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return this.capitalize(ability);\n    });\n    const evs = pokemonRes.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effort} ${stat.stat.name}`.toLowerCase().split(\"-\").map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(\" \");\n    }).join(\", \"); //Get Pokemon Description, Catch Rate, EggGroups, Gender Ratio, Hatch Steps\n\n    await axios.get(pokemonSpeciesUrl).then(res => {\n      let description = \" \";\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === \"en\") {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data[\"gender_rate\"];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n      const catchRate = Math.round(100 / 255 * res.data[\"capture_rate\"]);\n      const eggGroups = res.data[\"egg_groups\"].map(group => {\n        return this.capitalize(group.name);\n      });\n    });\n  }\n\n  capitalize(str) {\n    return str.toLowerCase().split(\"-\").map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(\" \");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, this.state.name));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Gabriel/OneDrive/Bureau/poke/react_pokedex/src/components/pokemon/Pokemon.js"],"names":["React","Component","axios","Pokemon","state","name","pokemonIndex","imageUrl","types","description","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroup","genderRatioMale","genderRationFemale","evs","hatchSteps","componentDidMount","props","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonRes","get","data","sprites","front_default","map","stat","Math","round","type","abilities","ability","capitalize","filter","effort","toLowerCase","split","s","charAt","toUpperCase","substring","join","then","res","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","genderRatioFemale","catchRate","eggGroups","group","str","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Pokemon extends Component {\r\n  state = {\r\n    name: \" \",\r\n    pokemonIndex: \" \",\r\n    imageUrl: \" \",\r\n    types: [],\r\n    description: \" \",\r\n    stats: {\r\n      hp: \" \",\r\n      attack: \" \",\r\n      defense: \" \",\r\n      speed: \" \",\r\n      specialAttack: \" \",\r\n      specialDefense: \" \",\r\n    },\r\n    height: \" \",\r\n    weight: \" \",\r\n    eggGroup: \" \",\r\n    genderRatioMale: \" \",\r\n    genderRationFemale: \" \",\r\n    evs: \" \",\r\n    hatchSteps: \" \",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { pokemonIndex } = this.props.match.params;\r\n\r\n    //setting up the urls for the pokemon information\r\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\r\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\r\n    const pokemonRes = await axios.get(pokemonUrl);\r\n\r\n    const name = pokemonRes.data.name;\r\n    const imageUrl = pokemonRes.data.sprites.front_default;\r\n\r\n    let { hp, attack, defense, speed, specialAttack, specialDefense } = \" \";\r\n\r\n    pokemonRes.data.stats.map((stat) => {\r\n      switch (stat.stat.name) {\r\n        case \"hp\":\r\n          hp = stat[\"base_stat\"];\r\n          break;\r\n        case \"attack\":\r\n          attack = stat[\"base_stat\"];\r\n          break;\r\n        case \"defense\":\r\n          defense = stat[\"base_stat\"];\r\n          break;\r\n        case \"speed\":\r\n          speed = stat[\"base_stat\"];\r\n          break;\r\n        case \"special-attack\":\r\n          specialAttack = stat[\"base_stat\"];\r\n          break;\r\n        case \"special-defense\":\r\n          specialDefense = stat[\"base_stat\"];\r\n          break;\r\n      }\r\n    });\r\n\r\n    //Convert Decimetes to Feet ... the +0.0001 *100) / 100 is for rounding to 2 decimal places\r\n    const height =\r\n      Math.round((pokemonRes.data.height * 0.328084 + 0.0001) * 100) / 100;\r\n    //Convert To lbs\r\n    const weight =\r\n      Math.round((pokemonRes.data.weight * 0.220462 + 0.0001) * 100) / 100;\r\n\r\n    const types = pokemonRes.data.types.map((type) => type.type.name);\r\n\r\n    const abilities = pokemonRes.data.abilities.map((ability) => {\r\n      return this.capitalize(ability);\r\n    });\r\n\r\n    const evs = pokemonRes.data.stats\r\n      .filter((stat) => {\r\n        if (stat.effort > 0) {\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n      .map((stat) => {\r\n        return `${stat.effort} ${stat.stat.name}`\r\n          .toLowerCase()\r\n          .split(\"-\")\r\n          .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n          .join(\" \");\r\n      })\r\n      .join(\", \");\r\n\r\n    //Get Pokemon Description, Catch Rate, EggGroups, Gender Ratio, Hatch Steps\r\n    await axios.get(pokemonSpeciesUrl).then((res) => {\r\n      let description = \" \";\r\n      res.data.flavor_text_entries.some((flavor) => {\r\n        if (flavor.language.name === \"en\") {\r\n          description = flavor.flavor_text;\r\n          return;\r\n        }\r\n      });\r\n      const femaleRate = res.data[\"gender_rate\"];\r\n      const genderRatioFemale = 12.5 * femaleRate;\r\n      const genderRatioMale = 12.5 * (8 - femaleRate);\r\n\r\n      const catchRate = Math.round((100 / 255) * res.data[\"capture_rate\"]);\r\n\r\n      const eggGroups = res.data[\"egg_groups\"].map((group) => {\r\n        return this.capitalize(group.name);\r\n      });\r\n    });\r\n  }\r\n\r\n  capitalize(str) {\r\n    return str\r\n      .toLowerCase()\r\n      .split(\"-\")\r\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n      .join(\" \");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.name}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}